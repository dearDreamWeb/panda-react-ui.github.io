{"version":3,"sources":["assets/images/logo.png","assets/images/github-brands.svg","components/Menu/MenuItem.tsx","components/Icon/index.tsx","components/Transition/index.tsx","components/Menu/SubMenu.tsx","components/Menu/MenuGroup.tsx","components/Menu/index.tsx","views/Common/ReactMarkdown.tsx","components/Divider/index.tsx","views/Common/Example.tsx","views/Common/ApiProps.tsx","views/Common/index.tsx","views/Introduce/index.tsx","components/Button/index.tsx","views/UseStart/index.tsx","views/ViewButton/index.tsx","views/ViewIcon/index.tsx","views/ViewDivider/index.tsx","views/ViewMenu/index.tsx","components/Grid/Col.tsx","components/Grid/index.tsx","views/ViewGrid/index.tsx","views/IndexContent/index.tsx","views/App/index.tsx","index.tsx"],"names":["module","exports","MenuItem","props","index","disabled","className","style","children","restProps","context","useContext","MenuContext","classes","classnames","onClick","onSelect","defaultProps","library","add","fas","Icon","theme","data-testid","Transition","classNames","animation","CSSTransition","Array","isArray","unmountOnExit","appear","SubMenu","timer","title","defaultOpenKeys","isOpen","mode","includes","useState","openSubMenu","setOpenSubMenu","split","subMenuClasses","handleMouse","e","toggle","clearTimeout","preventDefault","setTimeout","hoverEvents","onMouseEnter","onMouseLeave","clickEvents","handleClick","key","icon","childrenComponent","React","Children","map","child","i","childEl","displayName","type","cloneElement","console","error","in","timeout","renderChildren","MenuGroup","createContext","Menu","defaultIndex","activeIndex","setActiveIndex","passedContext","Provider","value","toString","TransMenu","Item","Group","ReactMarkdown","codeContent","codeDescription","openCode","open","setOpen","renderers","code","codeProps","vscDarkPlus","language","Divider","origin","childrenClasses","ExampleCode","ApiProps","childrenData","item","subItem","subIndex","Common","Introduce","href","target","rel","Button","size","btnType","UseStart","Example","ViewButton","ViewIcon","ViewDivider","ViewMenu","width","backgroundColor","Col","span","offset","xs","sm","md","lg","xl","TransRow","gutter","gutterRowStyle","marginLeft","marginRight","paddingLeft","paddingRight","ViewGrid","IndexContent","exact","path","component","logo","require","githubSvg","menuList","initIndex","resultIndex","forEach","itemIndex","window","location","hash","slice","childIndex","App","aside","useRef","useEffect","changeAsideH","addEventListener","current","height","src","alt","ref","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bde9c973.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d51697f5.png\";","module.exports = __webpack_public_path__ + \"static/media/github-brands.ec5bc1b3.svg\";","import React, { useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { MenuContext } from \"./index\";\r\n\r\n// MenuItem的参数\r\ninterface MenuItemProps {\r\n    index?: string;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    children?: React.ReactNode;\r\n}\r\nexport type AllMenuItemProps = MenuItemProps & React.HTMLAttributes<HTMLElement>;\r\nconst MenuItem: React.FC<AllMenuItemProps> = props => {\r\n    const { index, disabled, className, style, children, ...restProps } = props;\r\n    const context = useContext(MenuContext);\r\n    const classes = classnames(\"menu-item\", className, {\r\n        \"is-disabled\": disabled,\r\n        \"is-active\": context.index === index\r\n    })\r\n    // 点击事件通过context调用父组件的方法\r\n    const handleClick = () => {\r\n        if (context.onSelect && !disabled && (typeof index === \"string\")) {\r\n            context.onSelect(index);\r\n        }\r\n    }\r\n    return (\r\n        <li className={classes} style={style} onClick={handleClick}  {...restProps}>\r\n            {children}\r\n        </li>\r\n    )\r\n}\r\n\r\nMenuItem.defaultProps = {\r\n    disabled: false\r\n}\r\n\r\nexport default MenuItem;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport classnames from \"classnames\";\r\nimport { FontAwesomeIcon, FontAwesomeIconProps } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(fas);\r\n\r\nexport type ThemeProps = \"primary\" | \"danger\" | \"info\" | \"success\" | \"warning\";\r\n\r\n\r\nexport interface IconProps extends FontAwesomeIconProps {\r\n    theme?: ThemeProps\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = props => {\r\n    const { className, theme, ...restProps } = props;\r\n    const classes = classnames(\"pa-icon\", className, `icon-${theme}`);\r\n    return (\r\n        <FontAwesomeIcon className={classes} {...restProps} data-testid=\"test-icon\"/>\r\n    )\r\n}\r\nexport default Icon;","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\n\r\ntype AnimationName = \"slide-in-top\" | \"slide-in-bottom\" | \"slide-in-left\" | \"slide-in-right\";\r\n\r\ntype TransitionProps = CSSTransitionProps & { animation?: AnimationName };\r\n\r\nconst Transition: React.FC<TransitionProps> = props => {\r\n    const { children, classNames, animation, ...restProps } = props;\r\n    // 判断children是否为数组，为数组说明有多个子节素，防止动画被覆盖，外面加个div包裹住\r\n    const renderChildren = () => {\r\n        if (Array.isArray(children)) {\r\n            return (\r\n                <div>\r\n                    {children}\r\n                </div>\r\n            )\r\n        }\r\n        return children\r\n    }\r\n    return (\r\n        <CSSTransition\r\n            classNames={classNames ? classNames : animation}\r\n            {...restProps}\r\n        >\r\n            {renderChildren()}\r\n        </CSSTransition>\r\n    )\r\n}\r\nTransition.defaultProps = {\r\n    unmountOnExit: true,  // 根据in的参数，in的参数为true动态加载子元素；in的参数为false动态隐藏子元素\r\n    appear: true\r\n}\r\n\r\nexport default Transition;","import React, { useState, useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { MenuContext } from \"./index\";\r\nimport { AllMenuItemProps } from \"./MenuItem\";\r\nimport Icon from \"../Icon\";\r\nimport Transition from \"../../components/Transition\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(fas);\r\n\r\ninterface SubMenuProps {\r\n    index?: string;\r\n    title: string;\r\n    className?: string;\r\n}\r\n\r\nexport type allSubMenuProps = SubMenuProps & React.HTMLAttributes<HTMLElement>;\r\n\r\nconst SubMenu: React.FC<allSubMenuProps> = props => {\r\n    const { index, title, className, children, ...restProps } = props;\r\n    const context = useContext(MenuContext);\r\n    const defaultOpenKeys = context.defaultOpenKeys as Array<string>; // 获取默认打开的菜单的数组\r\n    // 只有在mode为vertical时才使用默认打开功能，判断初始化时是否打开\r\n    const isOpen = (index && context.mode === \"vertical\") ? defaultOpenKeys.includes(index) : false;\r\n    const [openSubMenu, setOpenSubMenu] = useState(isOpen);   // SubMenu是否打开\r\n    // submenItem的class\r\n    const classes = classnames(\"submenu-item\", className, {\r\n        \"is-active\": context.index.split(\"-\")[0] === index,\r\n        \"is-opened\": openSubMenu  // 是否展开\r\n    })\r\n    // subMenu的class\r\n    const subMenuClasses = classnames(\"pa-submenu\");\r\n\r\n    // 渲染SubMenu的子组件\r\n    const renderChildren = () => {\r\n        const childrenComponent = React.Children.map(children, (child, i) => {\r\n            const childEl = child as React.FunctionComponentElement<AllMenuItemProps>;\r\n            const displayName = childEl.type.displayName;\r\n            if (displayName === \"MenuItem\" || displayName === \"MenuGroup\") {\r\n                return React.cloneElement(childEl, { index: `${index}-${i + 1}` });\r\n            } else {\r\n                console.error(\"Warning: SubMenu has a child which is not a MenuItem component\");\r\n            }\r\n        })\r\n        return (\r\n            <Transition\r\n                in={openSubMenu}\r\n                timeout={300}\r\n                animation=\"slide-in-top\"\r\n            >\r\n                <ul className={subMenuClasses} {...restProps}>\r\n                    {childrenComponent}\r\n                </ul>\r\n            </Transition>\r\n\r\n        )\r\n    }\r\n\r\n    // 点击显示SubMenu\r\n    const handleClick = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        setOpenSubMenu(!openSubMenu);\r\n    }\r\n\r\n    // 鼠标移入显示SubMenu移出隐藏SubMenu\r\n    let timer: any;\r\n    const handleMouse = (e: React.MouseEvent, toggle: boolean) => {\r\n        clearTimeout(timer);\r\n        e.preventDefault();\r\n        timer = setTimeout(() => {\r\n            setOpenSubMenu(toggle);\r\n        }, 300)\r\n    }\r\n\r\n    // 当mode为horizontal时使用鼠标移入移出事件；为vertical时使用click事件\r\n    const hoverEvents = context.mode !== \"vertical\" ? {\r\n        onMouseEnter: (e: React.MouseEvent) => { handleMouse(e, true) },\r\n        onMouseLeave: (e: React.MouseEvent) => { handleMouse(e, false) }\r\n    } : {};\r\n    const clickEvents = context.mode === \"vertical\" ? {\r\n        onClick: (e: React.MouseEvent) => { handleClick(e) }\r\n    } : {}\r\n\r\n    // 渲染SubMenu\r\n    return (\r\n        <li key={index} className={classes} {...hoverEvents}>\r\n            <div className=\"submenu-title\" {...clickEvents}>\r\n                {title}\r\n                <Icon icon=\"angle-down\" className=\"arrow-down\" />\r\n            </div>\r\n\r\n            {renderChildren()}\r\n        </li>\r\n    )\r\n}\r\nSubMenu.displayName = \"SubMenu\";\r\nexport default SubMenu;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { AllMenuItemProps } from \"./MenuItem\";\r\n\r\ninterface MenuGroupProps {\r\n    index?: string;\r\n    title: string;\r\n    className?: string;\r\n}\r\n\r\nexport type allMenuGroupProps = MenuGroupProps & React.HTMLAttributes<HTMLElement>;\r\n\r\nconst MenuGroup: React.FC<allMenuGroupProps> = props => {\r\n    const { index, title, className, children, ...restProps } = props;\r\n    const classes = classnames(\"pa-menu-group\");\r\n\r\n    const renderChildren = () => {\r\n        return React.Children.map(children, (child, i) => {\r\n            const childEl = child as React.FunctionComponentElement<AllMenuItemProps>;\r\n            if (childEl.type.displayName === \"MenuItem\") {\r\n                return React.cloneElement(childEl, { index: `${index}-${i + 1}`, className: \"pa-menu-group-item\" });\r\n            } else {\r\n                console.error(\"Warning: MenuGroup has a child which is not a MenuItem component\");\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <li key={index} className={classes} {...restProps}>\r\n            <p className=\"pa-menu-group-title\">{title}</p>\r\n            <ul>\r\n                {renderChildren()}\r\n            </ul>\r\n        </li>\r\n    )\r\n}\r\nMenuGroup.displayName = \"MenuGroup\";\r\nexport default MenuGroup;","import React, { useState, createContext } from \"react\";\r\nimport \"./index.scss\";\r\nimport classnames from \"classnames\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { AllMenuItemProps } from \"./MenuItem\";\r\nimport SubMenu, { allSubMenuProps } from \"./SubMenu\";\r\nimport MenuGroup, { allMenuGroupProps } from \"./MenuGroup\";\r\n\r\n\r\ntype MenuMode = \"horizontal\" | \"vertical\";\r\ntype SelectCallback = (selectIndex: string) => void;\r\n// Menu组件的参数\r\nexport interface MenuProps {\r\n    defaultIndex?: string;\r\n    className?: string;\r\n    mode?: MenuMode;\r\n    style?: React.CSSProperties;\r\n    onSelect?: SelectCallback;\r\n    children?: React.ReactNode;\r\n    defaultOpenKeys?: string[];  // 默认打开哪些SubMenu菜单\r\n}\r\n\r\n// 定义传入子组件参数context\r\ninterface IMenuContext {\r\n    index: string;\r\n    onSelect?: SelectCallback;\r\n    mode?: string;\r\n    defaultOpenKeys?: string[];  // 默认打开哪些SubMenu菜单\r\n}\r\n// 导出父组件的createContext\r\nexport const MenuContext = createContext<IMenuContext>({ index: \"0\" })\r\n\r\ntype AllMenuProps = MenuProps & React.HTMLAttributes<HTMLElement>;\r\n\r\n\r\n\r\n// Menu组件\r\nconst Menu: React.FC<AllMenuProps> = props => {\r\n    const { className, mode, style, defaultIndex, children, onSelect, defaultOpenKeys, ...restProps } = props;\r\n    const [activeIndex, setActiveIndex] = useState(defaultIndex);\r\n    const classes = classnames(\"pa-menu\", className, {\r\n        [`menu-${mode}`]: true\r\n    })\r\n\r\n    // 渲染子组件\r\n    const renderChildren = () => {\r\n        return React.Children.map(children, (child, index) => {\r\n            const childEl = child as React.FunctionComponentElement<AllMenuItemProps>;\r\n            const { displayName } = childEl.type ? childEl.type : { displayName: \"\" };\r\n            if (displayName === \"MenuItem\" || displayName === \"SubMenu\") {\r\n                // 克隆一个childEl元素，添加参数index\r\n                return React.cloneElement(childEl, { index: index.toString() });\r\n            } else if (displayName === \"MenuGroup\" && mode === \"vertical\") {\r\n                // MenuGroup只存在于mode为vertical模式，或者SubMenu组件中\r\n                return React.cloneElement(childEl, { index: index.toString() });\r\n            }\r\n            else {\r\n                console.error(\"Warning: Menu has a child which is not a MenuItem component\");\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // 点击事件回调\r\n    const handleClick = (index: string) => {\r\n        setActiveIndex(index);\r\n        if (onSelect) {\r\n            onSelect(index);\r\n        }\r\n    }\r\n    // 传入context的值\r\n    const passedContext: IMenuContext = {\r\n        index: activeIndex ? activeIndex : \"0\",\r\n        onSelect: handleClick,\r\n        mode,\r\n        defaultOpenKeys\r\n    }\r\n    return (\r\n        <ul className={classes} style={style} {...restProps} data-testid=\"test-menu\">\r\n            <MenuContext.Provider value={passedContext}>\r\n                {renderChildren()}\r\n            </MenuContext.Provider>\r\n        </ul>\r\n    )\r\n}\r\n\r\nMenuItem.displayName = \"MenuItem\";\r\n\r\n// Menu组件的默认参数 \r\nMenu.defaultProps = {\r\n    defaultIndex: \"0\",\r\n    defaultOpenKeys: [],\r\n    mode: \"horizontal\"\r\n}\r\n\r\n// 把SubMenu组件、MenuItem组件、MenuGroup组件变成Menu.Item等形式\r\ntype ItemMenuComponent = React.FC<AllMenuProps> & {\r\n    Item: React.FC<AllMenuItemProps>,\r\n    SubMenu: React.FC<allSubMenuProps>,\r\n    Group: React.FC<allMenuGroupProps>\r\n}\r\nconst TransMenu = Menu as ItemMenuComponent;\r\nTransMenu.Item = MenuItem;\r\nTransMenu.SubMenu = SubMenu;\r\nTransMenu.Group = MenuGroup;\r\nexport default TransMenu;","import React, { useState } from 'react';\r\nimport Markdown from \"react-markdown\";\r\nimport Transition from \"../../components/Transition\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport Icon from \"../../components/Icon\";\r\n\r\ninterface MarkdowunProps {\r\n    codeContent: string,  // 代码内容\r\n    codeDescription: string,  // 例子描述\r\n    openCode: boolean\r\n}\r\n\r\ninterface CodeProps {\r\n    language: string,\r\n    value: string\r\n}\r\n\r\nconst ReactMarkdown = (props: MarkdowunProps) => {\r\n    const { codeContent, codeDescription, openCode } = props;\r\n    const [open, setOpen] = useState(openCode);\r\n\r\n    // 渲染markdown中的代码部分\r\n    const renderers = {\r\n        code: (codeProps: CodeProps) => {\r\n            return <SyntaxHighlighter style={vscDarkPlus} language={codeProps.language} children={codeProps.value} />\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"code-example-box\">\r\n            <p className=\"cod-descript-conetent\">\r\n                <span>{codeDescription}</span> \r\n                <Icon icon=\"expand-arrows-alt\" className=\"icon-show\" title={open ? \"隐藏代码\" : \"显示代码\"}\r\n                    onClick={() => setOpen(!open)}\r\n                />\r\n            </p>\r\n            <Transition\r\n                in={open}\r\n                timeout={300}\r\n                animation=\"slide-in-top\"\r\n            >\r\n                <Markdown className=\"pa-markdown\" renderers={renderers} children={codeContent} />\r\n            </Transition>\r\n        </div>\r\n    )\r\n}\r\n\r\nReactMarkdown.displayName = \"ReactMarkdown\";\r\n\r\nReactMarkdown.defaultProps = {\r\n    openCode: false\r\n}\r\n\r\nexport default ReactMarkdown;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./index.scss\";\r\n\r\nexport interface DividerProps extends React.HTMLAttributes<HTMLElement> {\r\n    mode?: \"horizontal\" | \"vertical\",\r\n    className?: string,\r\n    origin?: \"left\" | \"center\" | \"right\"\r\n}\r\n\r\nconst Divider: React.FC<DividerProps> = props => {\r\n    const { mode, className, origin, children, ...restProps } = props;\r\n    const classes = classnames(\"pa-divider\", `pa-divider-${mode}`, className, {\r\n        \"pa-ischildren\": children && mode === \"horizontal\"  // 文本有内容只在mode为horizontal中显示\r\n    });\r\n    const childrenClasses = classnames(\"pa-divider-inner\", `pa-divider-${origin}`)\r\n\r\n    // 如果child是string说明插入的是段字符串不是标签\r\n    const renderChildren = () => {\r\n        return React.Children.map(children, child => {\r\n            if (typeof child === \"string\") {\r\n                return (\r\n                    <div className={childrenClasses} data-testid=\"divider-content\">\r\n                        {child}\r\n                    </div>\r\n                );\r\n            } else {\r\n                const childEl = child as React.FunctionComponentElement<DividerProps>;\r\n                return (\r\n                    <div className={childrenClasses} data-testid=\"divider-content\">\r\n                        {React.cloneElement(childEl)}\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes} {...restProps} data-testid=\"test-diviver\">\r\n            {renderChildren()}\r\n        </div>\r\n    )\r\n}\r\n\r\nDivider.defaultProps = {\r\n    mode: \"horizontal\",\r\n    origin: \"center\"\r\n}\r\n\r\nexport default Divider;","import React from \"react\";\r\nimport ReactMarkdown from \"./ReactMarkdown\";\r\nimport Divider from \"../../components/Divider\";\r\nimport Icon from \"../../components/Icon\";\r\n\r\ninterface ExampleCodeProps extends React.HTMLAttributes<HTMLElement> {\r\n    title: string,\r\n    codeDescription: string,\r\n    codeContent: string\r\n}\r\n\r\nconst ExampleCode: React.FC<ExampleCodeProps> = (props) => {\r\n    const { title, codeDescription, codeContent, children } = props;\r\n    return (\r\n        <div className=\"example-box\">\r\n            <div className=\"examp-box-header\">\r\n                {children}\r\n            </div>\r\n            <Divider origin=\"left\">\r\n                <div>\r\n                    {title}\r\n                    <Icon icon=\"edit\" className=\"icon\" />\r\n                </div>\r\n            </Divider>\r\n            <ReactMarkdown codeDescription={codeDescription} codeContent={codeContent} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleCode;","import React from \"react\";\r\n\r\n\r\n\r\ninterface ApiAllProps extends React.HTMLAttributes<HTMLElement> {\r\n    childrenData: string[][]\r\n}\r\n\r\nconst ApiProps: React.FC<ApiAllProps> = (props) => {\r\n    const header = [\"参数\", \"说明\", \"类型\", \"默认值\"];\r\n    const { childrenData } = props;\r\n    const classes: string[] = [\"props\", \"descript\", \"type\", \"default\"];\r\n    return (\r\n        <div className=\"api-props\">\r\n            <header className=\"api-porps-header\">\r\n                {header.map((item, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </header>\r\n            <main className=\"api-porps-main\">\r\n                {childrenData.map((item, index) => {\r\n                    return (\r\n                        <div className=\"api-props-main-item\" key={index}>\r\n                            {\r\n                                item.map((subItem, subIndex) => {\r\n                                    return (\r\n                                        <div key={subIndex} className={classes[subIndex]}>\r\n                                            {subItem}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiProps;","import React from 'react';\r\nimport './index.scss';\r\nimport ReactMarkdown from \"./ReactMarkdown\";\r\nimport Example from \"./Example\";\r\nimport ApiProps from \"./ApiProps\";\r\n\r\nexport { ReactMarkdown, Example, ApiProps };\r\n\r\ninterface CommonBaseProps {\r\n    title: string,\r\n    className?: string\r\n}\r\nexport type CommonProps = CommonBaseProps & React.HTMLAttributes<HTMLElement>;\r\n\r\nconst Common: React.FC<CommonProps> = (props) => {\r\n    const { title, className, children, ...restProps } = props;\r\n\r\n    const renderChildren = () => {\r\n        return React.Children.map(children, child => {\r\n            if (typeof child === \"string\") {\r\n                return child;\r\n            } else {\r\n                const childEl = child as React.FunctionComponentElement<CommonProps>;\r\n                return React.cloneElement(childEl)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <section className={className} {...restProps} >\r\n            <h2 className=\"title\">{title}</h2>\r\n            <div className=\"content\">\r\n                {renderChildren()}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Common;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common from \"../Common\";\r\n\r\nconst Introduce: React.FC<HTMLElement> = () => {\r\n    return (\r\n        <>\r\n            <Common title=\"Panda-react-ui\">\r\n                Panda-react-ui 是一套基于 PC 端 React 组件库，色彩、样式的设计参考了其他成熟组件库。\r\n            </Common>\r\n            <Common title=\"使用 TypeScript\">\r\n                <a href=\"https://www.tslang.cn/\" className=\"href\" target=\"_blank\" rel=\"noopener noreferrer\">TypeScript</a>\r\n                提供了静态类型检查，让开发人员可以在代码运行之前识别某些类型问题。Panda-react-ui 完全使用 TypeScript 编写，有效增强了代码的健壮性。\r\n            </Common>\r\n        </>\r\n    )\r\n}\r\nexport default Introduce;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\n// button的尺寸\r\ntype ButtonSize = \"lg\" | \"sm\";\r\n\r\n// button的类型\r\ntype ButtonType = \"primary\" | \"default\" | \"danger\" | \"warning\" | \"link\";\r\n\r\n// button的参数\r\ninterface BaseButtonProps {\r\n    className?: string,\r\n    disabled?: boolean,\r\n    size?: ButtonSize,\r\n    btnType?: ButtonType,\r\n    children?: React.ReactNode,\r\n    href?: string\r\n}\r\n// 联合BaseButtonProps的属性和button标签的原生属性\r\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>;\r\n// 联合BaseButtonProps的属性和a标签的原生属性\r\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>;\r\n// partial将所有属性都定义为可选\r\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>;\r\n\r\nconst Button: React.FC<ButtonProps> = props => {\r\n    const { disabled, size, className, btnType, children, href, ...restProps } = props;\r\n    const classes = classnames(\"btn\", className, {\r\n        [`btn-${btnType}`]: btnType,\r\n        [`btn-${size}`]: size,\r\n        \"disabled\": btnType === \"link\" && disabled\r\n    })\r\n    // 判断是否为link类型，是的话就是a标签，不是就是button标签\r\n    if (btnType === \"link\") {\r\n        return (\r\n            <span\r\n                className={classes}\r\n                {...restProps}\r\n            >\r\n                <a href={href}>\r\n                    {children}</a>\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <button\r\n                className={classes}\r\n                disabled={disabled}\r\n                {...restProps}\r\n            >\r\n                {children}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled: false,\r\n    btnType: \"default\"\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common, { Example } from \"../Common\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst UseStart: React.FC<HTMLElement> = () => {\r\n    const str = ` ~~~js\r\n    import { Button } from \"Panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n    <Button btnType=\"primary\">Primary</Button>`\r\n    return (\r\n        <>\r\n            <Common title=\"开始使用\" >\r\n                Panda-react-ui 已发布至 NPM，您可以使用 npm / yarn 来安装。\r\n                <p>$ npm install Panda-react-ui</p>\r\n                <p>$ yarn add Panda-react-ui</p>\r\n            </Common>\r\n            <Common title=\"简单示例\">\r\n                <Example codeDescription=\"使用Panda-react-ui的Button组件\" codeContent={str} title=\"按钮组件\" >\r\n                    <Button btnType=\"primary\">Primary</Button>\r\n                </Example>\r\n            </Common>\r\n        </>\r\n    )\r\n}\r\nexport default UseStart;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common, { Example, ApiProps } from \"../Common\";\r\nimport Button from \"../../components/Button\";\r\n\r\nconst ViewButton: React.FC<HTMLElement> = () => {\r\n    const propsData = [\r\n        [\"className\", \"自定义的class类名\", \"string\", \"-\"],\r\n        [\"disabled\", \"禁用按钮的状态\", \"boolean\", \"false\"],\r\n        [\"size\", \"按钮的尺寸\", `lg | sm`, \"-\"],\r\n        [\"href\", \"btnType为link的文字按钮的跳转地址\", \"string\", \"-\"],\r\n        [\"btnType\", \"设置按钮的类型\", `primary | default | danger | warning | link`, \"default\"]\r\n    ]\r\n\r\n    const str = ` ~~~js\r\n    import { Button } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <Button>默认按钮</Button>\r\n    <Button btnType=\"primary\">主要按钮</Button>\r\n    <Button btnType=\"warning\">警告按钮</Button>\r\n    <Button btnType=\"danger\">危险按钮</Button>\r\n    <Button disabled>Disabled</Button>\r\n    <Button btnType=\"link\">Link</Button>`;\r\n\r\n    const str1 = ` ~~~js\r\n    import { Button } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <Button disabled>默认按钮</Button>\r\n    <Button btnType=\"primary\" disabled>主要按钮</Button>\r\n    <Button btnType=\"warning\" disabled>警告按钮</Button>\r\n    <Button btnType=\"danger\" disabled>危险按钮</Button>\r\n    <Button btnType=\"link\" disabled>文字按钮</Button>`;\r\n\r\n    const str2 = ` ~~~js\r\n    import { Button } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <Button btnType=\"link\">文字按钮</Button>\r\n    <Button btnType=\"link\" disabled>文字按钮</Button>`;\r\n\r\n    const str3 = ` ~~~js\r\n    import { Button } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n    \r\n    <Button size=\"lg\">大型按钮</Button>\r\n    <Button>默认按钮</Button>\r\n    <Button size=\"sm\">小型按钮</Button>`;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Common title=\"Button 按钮\" >\r\n                点击以开始即时操作。\r\n            </Common>\r\n            <Common title=\"何时使用\" >\r\n                点击以开始即时操作。\r\n            </Common>\r\n            <Common title=\"代码示例\">\r\n                <Example codeDescription=\"使用btnType和disabled属性来定义 Button 的样式。\" codeContent={str} title=\"基础的按钮用法。\" >\r\n                    <div className=\"btn-wrapper\">\r\n                        <Button>默认按钮</Button>\r\n                        <Button btnType=\"primary\">主要按钮</Button>\r\n                        <Button btnType=\"warning\">警告按钮</Button>\r\n                        <Button btnType=\"danger\">危险按钮</Button>\r\n                        <Button disabled>禁止按钮</Button>\r\n                        <Button btnType=\"link\">文字按钮</Button>\r\n                    </div>\r\n                </Example>\r\n\r\n                <Example codeDescription=\"你可以使用disabled属性来定义按钮是否可用，它接受一个Boolean值。\" codeContent={str1} title=\"禁用状态\" >\r\n                    <div className=\"btn-wrapper\">\r\n                        <Button disabled>默认按钮</Button>\r\n                        <Button btnType=\"primary\" disabled>主要按钮</Button>\r\n                        <Button btnType=\"warning\" disabled>警告按钮</Button>\r\n                        <Button btnType=\"danger\" disabled>危险按钮</Button>\r\n                        <Button btnType=\"link\" disabled>文字按钮</Button>\r\n                    </div>\r\n                </Example>\r\n\r\n                <Example codeDescription=\"没有边框和背景色的按钮。\" codeContent={str2} title=\"文字按钮\" >\r\n                    <div className=\"btn-wrapper\">\r\n                        <Button btnType=\"link\">文字按钮</Button>\r\n                        <Button btnType=\"link\" disabled>文字按钮</Button>\r\n                    </div>\r\n                </Example>\r\n\r\n                <Example codeDescription=\"Button 组件提供三种尺寸的按钮，使用size属性来定义按钮的尺寸。\" codeContent={str3} title=\"不同尺寸的按钮\" >\r\n                    <div className=\"btn-wrapper\">\r\n                        <Button size=\"lg\">大型按钮</Button>\r\n                        <Button>默认按钮</Button>\r\n                        <Button size=\"sm\">小型按钮</Button>\r\n                    </div>\r\n                </Example>\r\n            </Common>\r\n            \r\n            <Common title=\"API\" >\r\n                <ApiProps childrenData={propsData} />\r\n            </Common>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ViewButton;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common, { Example } from \"../Common\";\r\nimport Button from \"../../components/Button\";\r\nimport Icon from \"../../components/Icon\";\r\n\r\nconst ViewIcon: React.FC<HTMLElement> = () => {\r\n    const icons = [\"address-book\", \"address-card\", \"angry\", \"arrow-alt-circle-down\", \"arrow-alt-circle-left\", \"arrow-alt-circle-right\", \"arrow-alt-circle-up\", \"bell\", \"bell-slash\", \"bookmark\", \"building\", \"calendar\", \"calendar-alt\", \"calendar-check\", \"calendar-minus\", \"calendar-plus\", \"calendar-times\", \"caret-square-down\", \"caret-square-left\", \"caret-square-right\", \"caret-square-up\", \"chart-bar\", \"check-circle\", \"check-square\", \"circle\", \"clipboard\", \"clock\", \"clone\", \"closed-captioning\", \"comment\", \"comment-alt\", \"comment-dots\", \"comments\", \"compass\", \"copy\", \"copyright\", \"credit-card\", \"dizzy\", \"dot-circle\", \"edit\", \"envelope\", \"envelope-open\", \"eye\", \"eye-slash\", \"file\", \"file-alt\", \"file-archive\", \"file-audio\", \"file-code\", \"file-excel\", \"file-image\", \"file-pdf\", \"file-powerpoint\", \"file-video\", \"file-word\", \"flag\", \"flushed\", \"folder\", \"folder-open\", \"frown\", \"frown-open\", \"futbol\", \"gem\", \"grimace\", \"grin\", \"grin-alt\", \"grin-beam\", \"grin-beam-sweat\", \"grin-hearts\", \"grin-squint\", \"grin-squint-tears\", \"grin-stars\", \"grin-tears\", \"grin-tongue\", \"grin-tongue-squint\", \"grin-tongue-wink\", \"grin-wink\", \"hand-lizard\", \"hand-paper\", \"hand-peace\", \"hand-point-down\", \"hand-point-left\", \"hand-point-right\", \"hand-point-up\", \"hand-pointer\", \"hand-rock\", \"hand-scissors\", \"hand-spock\", \"handshake\", \"hdd\", \"heart\", \"hospital\", \"hourglass\", \"id-badge\", \"id-card\", \"image\", \"images\", \"keyboard\", \"kiss\", \"kiss-beam\", \"kiss-wink-heart\", \"laugh\", \"laugh-beam\", \"laugh-squint\", \"laugh-wink\", \"lemon\", \"life-ring\", \"lightbulb\", \"list-alt\", \"map\", \"meh\", \"meh-blank\", \"meh-rolling-eyes\", \"minus-square\", \"money-bill-alt\", \"moon\", \"newspaper\", \"object-group\", \"object-ungroup\", \"paper-plane\", \"pause-circle\", \"play-circle\", \"plus-square\", \"question-circle\", \"registered\", \"sad-cry\", \"sad-tear\", \"save\", \"share-square\", \"smile\", \"smile-beam\", \"smile-wink\", \"snowflake\", \"square\", \"star\", \"star-half\", \"sticky-note\", \"stop-circle\", \"sun\", \"surprise\", \"thumbs-down\", \"thumbs-up\", \"times-circle\", \"tired\", \"trash-alt\", \"user\", \"user-circle\", \"window-close\", \"window-maximize\", \"window-minimize\", \"window-restore\"];\r\n\r\n    const str = ` ~~~js\r\n    import { Button, Icon } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n    \r\n    <Icon icon=\"arrow-alt-circle-down\" />\r\n    <Icon icon=\"share\" theme=\"primary\" />\r\n    <Icon icon=\"check-circle\" theme=\"success\" />\r\n    <Icon icon=\"info\" theme=\"info\" />\r\n    <Icon icon=\"exclamation-triangle\" theme=\"warning\" />\r\n    <Icon icon=\"exclamation-circle\" theme=\"danger\" />\r\n    <Button btnType=\"primary\"><Icon icon=\"share\" /> 分享</Button>`;\r\n\r\n\r\n    return (\r\n        <div className=\"view-icon\">\r\n            <Common title=\"Icon 图标\" >\r\n                提供了一套常用的图标集合。\r\n            </Common>\r\n\r\n            <Common title=\"代码示例\">\r\n                <Example codeDescription=\"直接通过设置属性icon来定义图标的样式和theme定义图标的颜色。\" codeContent={str} title=\"使用方法\" >\r\n                    <div className=\"icon-wrapper\">\r\n                        <Icon icon=\"arrow-alt-circle-down\" className=\"icon-wrapper-item\" />\r\n                        <Icon icon=\"share\" theme=\"primary\" className=\"icon-wrapper-item\" />\r\n                        <Icon icon=\"check-circle\" theme=\"success\" className=\"icon-wrapper-item\" />\r\n                        <Icon icon=\"info\" theme=\"info\" className=\"icon-wrapper-item\" />\r\n                        <Icon icon=\"exclamation-triangle\" theme=\"warning\" className=\"icon-wrapper-item\" />\r\n                        <Icon icon=\"exclamation-circle\" theme=\"danger\" className=\"icon-wrapper-item\" />\r\n                        <Button btnType=\"primary\"><Icon icon=\"share\" /> 分享</Button>\r\n                    </div>\r\n                </Example>\r\n            </Common>\r\n\r\n\r\n            <Common title=\"图标集合\" >\r\n                <div className=\"icon-all\">\r\n                    {icons.map((item: any, index) => {\r\n                        return (\r\n                            <div key={index} className=\"icon-all-item\">\r\n                                <Icon icon={item} className=\"icon-all-item-icon\" />\r\n                                <p>{item}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Common>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ViewIcon;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common, { Example, ApiProps } from \"../Common\";\r\nimport Divider from \"../../components/Divider\";\r\n\r\nconst ViewDivider: React.FC<HTMLElement> = () => {\r\n    const propsData = [\r\n        [\"className\", \"自定义的class类名\", \"string\", \"-\"],\r\n        [\"mode\", \"分割线的模式，横向还是竖向\", \"horizontal | vertical\", \"horizontal\"],\r\n        [\"origin\", \"文字分割线的文字的位置，仅应用在mode为horizontal时\", `left | center | right`, \"center\"]\r\n    ]\r\n\r\n    const str = ` ~~~js\r\n    import { Divider } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <div>\r\n        如果只看到太阳的黑点，那你的生活将缺少温暖;如果你只看到月亮的阴影，那么你的生命历程将难以找到光明;\r\n        如果你总是发现朋友的缺点，你么你的人生旅程将难以找到知音;\r\n        同样，如果你总希望自己完美无缺，假设你的这一愿望真的能如愿以偿，那么你最大的缺点就是没有缺点。\r\n    </div>\r\n    <Divider />\r\n    <div>\r\n        或许是命运的不幸注定要将自己缤纷多彩的梦撞碎;\r\n        或许是天地的无情终归要将自己继日的辛勤当做泡影放飞，\r\n        或许是许许多多的难以理解却又实实在在的障碍与挫折早已将意气丰发的拼搏与百折不挠的进击化为道道忧愁阵阵孤寂，\r\n        那么就请在凄惨中反省我们自己吧!\r\n    </div>\r\n    <Divider />`;\r\n\r\n    const str1 = ` ~~~js\r\n    import { Divider } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <div>\r\n        无论从那里来的，只要是食物，壮健者大抵就无需思索，承认是吃的东西。\r\n        惟有衰病的，却总常想到害胃，伤身，特有许多禁例，许多避忌;\r\n        还有一大套比较利害而终于不得要领的理由，例如吃固无妨，而不吃尤稳，食之或当有益，然究以不吃为宜云云之类。\r\n        但这一类人物总要日见其衰弱的，自己先已失了活气了。——《看镜有感》一九二五年\r\n    </div>\r\n    <Divider origin=\"left\">左边</Divider>\r\n    <div>\r\n        如果痛苦换来的是结识真理、坚持真理，就应自觉的欣然承受，那时，也只有那时，痛苦穿掘着灵魂的深处，使人受了精神底苦刑而得到创伤，又即从这得伤和养伤和愈合中，得到苦的涤除，而上了苏生的路。\r\n    </div>\r\n    <Divider origin=\"center\">中间</Divider>\r\n    <div>\r\n        中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。\r\n        但如果你主张拆掉屋顶他们就来调和，愿意开窗了。——《无声的中国》一九二七年\r\n    </div>\r\n    <Divider origin=\"right\">右边</Divider>`;\r\n\r\n    const str2 = ` ~~~js\r\n    import { Divider } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n    \r\n    <div>\r\n        左边\r\n        <Divider mode=\"vertical\" />\r\n        中间\r\n        <Divider mode=\"vertical\" />\r\n        右边\r\n    </div>`;\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"view-divider\">\r\n            <Common title=\"Divider分割线\" >\r\n                区隔内容的分割线。\r\n            </Common>\r\n            <Common title=\"何时使用\" >\r\n                对不同章节的文本段落进行分割；对行内文字/链接进行分割，例如表格的操作列。\r\n            </Common>\r\n            <Common title=\"代码示例\">\r\n                <Example codeDescription=\"默认为水平分割线，可在中间加入文字。\" codeContent={str} title=\"水平分割线\" >\r\n                    <div className=\"divider-wrapper\">\r\n                        <div>\r\n                            如果只看到太阳的黑点，那你的生活将缺少温暖;如果你只看到月亮的阴影，那么你的生命历程将难以找到光明;\r\n                            如果你总是发现朋友的缺点，你么你的人生旅程将难以找到知音;\r\n                            同样，如果你总希望自己完美无缺，假设你的这一愿望真的能如愿以偿，那么你最大的缺点就是没有缺点。\r\n                        </div>\r\n                        <Divider />\r\n                        <div>\r\n                            或许是命运的不幸注定要将自己缤纷多彩的梦撞碎;\r\n                            或许是天地的无情终归要将自己继日的辛勤当做泡影放飞，\r\n                            或许是许许多多的难以理解却又实实在在的障碍与挫折早已将意气丰发的拼搏与百折不挠的进击化为道道忧愁阵阵孤寂，\r\n                            那么就请在凄惨中反省我们自己吧!\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                </Example>\r\n\r\n                <Example codeDescription=\"分割线中带有文字，可以用 origin 指定文字位置。\" codeContent={str1} title=\"带文字的分割线\" >\r\n                    <div className=\"divider-wrapper\">\r\n                        <div>\r\n                            无论从那里来的，只要是食物，壮健者大抵就无需思索，承认是吃的东西。\r\n                            惟有衰病的，却总常想到害胃，伤身，特有许多禁例，许多避忌;\r\n                            还有一大套比较利害而终于不得要领的理由，例如吃固无妨，而不吃尤稳，食之或当有益，然究以不吃为宜云云之类。\r\n                            但这一类人物总要日见其衰弱的，自己先已失了活气了。——《看镜有感》一九二五年\r\n                        </div>\r\n                        <Divider origin=\"left\">左边</Divider>\r\n                        <div>\r\n                            如果痛苦换来的是结识真理、坚持真理，就应自觉的欣然承受，那时，也只有那时，痛苦穿掘着灵魂的深处，使人受了精神底苦刑而得到创伤，又即从这得伤和养伤和愈合中，得到苦的涤除，而上了苏生的路。\r\n                        </div>\r\n                        <Divider origin=\"center\">中间</Divider>\r\n                        <div>\r\n                            中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。\r\n                            但如果你主张拆掉屋顶他们就来调和，愿意开窗了。——《无声的中国》一九二七年\r\n                        </div>\r\n                        <Divider origin=\"right\">右边</Divider>\r\n                    </div>\r\n                </Example>\r\n\r\n                <Example codeDescription=\"使用 mode='vertical' 设置为行内的垂直分割线。\" codeContent={str2} title=\"垂直分割线\" >\r\n                    <div className=\"divider-wrapper\">\r\n                        <div>\r\n                            左边\r\n                            <Divider mode=\"vertical\" />\r\n                            中间\r\n                            <Divider mode=\"vertical\" />\r\n                            右边\r\n                        </div>\r\n                    </div>\r\n                </Example>\r\n\r\n            </Common>\r\n\r\n            <Common title=\"API\" >\r\n                <ApiProps childrenData={propsData} />\r\n            </Common>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ViewDivider;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common, { Example, ApiProps } from \"../Common\";\r\nimport Menu from \"../../components/Menu\";\r\n\r\nconst ViewMenu: React.FC<HTMLElement> = () => {\r\n    // Menu组件的api\r\n    const propsMenuData: string[][] = [\r\n        [\"className\", \"自定义的class类名\", \"string\", \"-\"],\r\n        [\"mode\", \"分割线的模式，横向还是竖向\", \"horizontal | vertical\", \"horizontal\"],\r\n        [\"defaultIndex\", \"初始化选中的菜单项\", \"string\", \"'0'\"],\r\n        [\"defaultOpenKeys\", \"初始展开的 SubMenu 菜单项 key 数组\", \"array\", \"[]\"],\r\n        [\"style\", \"根节点样式\", \"CSSProperties\", \"-\"],\r\n        [\"children\", \"子节点\", \"ReactNode\", \"-\"],\r\n        [\"onSelect\", \"被选中时调用\", \"function(key){}\", \"-\"],\r\n    ]\r\n\r\n    // Menu.Item组件的api\r\n    const propsMenuItemData: string[][] = [\r\n        [\"className\", \"自定义的class类名\", \"string\", \"-\"],\r\n        [\"index\", \"item的唯一标识\", \"string\", \"-\"],\r\n        [\"disabled\", \"是否禁用\", \"boolean\", \"false\"],\r\n        [\"style\", \"根节点样式\", \"CSSProperties\", \"-\"],\r\n        [\"children\", \"子节点\", \"ReactNode\", \"-\"],\r\n    ]\r\n\r\n    // Menu.SubMenu组件的api\r\n    const propsMenuSubMenuData: string[][] = [\r\n        [\"className\", \"自定义的class类名\", \"string\", \"-\"],\r\n        [\"index\", \"item的唯一标识\", \"string\", \"-\"],\r\n        [\"title\", \"子菜单项值\", \"string\", \"-\"]\r\n    ]\r\n\r\n    // Menu.Group组件的api\r\n    const propsMenuGroupData: string[][] = [\r\n        [\"className\", \"自定义的class类名\", \"string\", \"-\"],\r\n        [\"index\", \"item的唯一标识\", \"string\", \"-\"],\r\n        [\"title\", \"子菜单项值\", \"string\", \"-\"]\r\n    ]\r\n\r\n    const str = ` ~~~js\r\n    import { Menu } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <Menu>\r\n        <Menu.Item>选项一</Menu.Item>\r\n        <Menu.Item>选项二</Menu.Item>\r\n        <Menu.Item disabled>选项三</Menu.Item>\r\n        <Menu.SubMenu title=\"分组\">\r\n            <Menu.Item>分组一</Menu.Item>\r\n            <Menu.Item>分组二</Menu.Item>\r\n            <Menu.Group title=\"分类\">\r\n                <Menu.Item>分类一</Menu.Item>\r\n                <Menu.Item>分类二</Menu.Item>\r\n            </Menu.Group>\r\n        </Menu.SubMenu>\r\n    </Menu>`;\r\n\r\n    const str1 = ` ~~~js\r\n    import { Menu } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n    \r\n    <Menu mode=\"vertical\" style={{ width: \"200px\", backgroundColor: \"#f7f7f7\" }}>\r\n        <Menu.Item>选项一</Menu.Item>\r\n        <Menu.Item>选项二</Menu.Item>\r\n        <Menu.Item disabled>选项三</Menu.Item>\r\n        <Menu.SubMenu title=\"分组\">\r\n            <Menu.Item>分组一</Menu.Item>\r\n            <Menu.Item>分组二</Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.Group title=\"分类\">\r\n            <Menu.Item>分类一</Menu.Item>\r\n            <Menu.Item>分类二</Menu.Item>\r\n        </Menu.Group>\r\n    </Menu>`;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"view-divider\">\r\n            <Common title=\"Menu 导航菜单\" >\r\n                为页面和功能提供导航的菜单列表。\r\n            </Common>\r\n            <Common title=\"何时使用\" >\r\n                网站顶部和左侧的导航。\r\n            </Common>\r\n            <Common title=\"代码示例\">\r\n                <Example title=\"水平导航\" codeDescription=\"水平的顶部导航菜单。\" codeContent={str} >\r\n                    <Menu>\r\n                        <Menu.Item>选项一</Menu.Item>\r\n                        <Menu.Item>选项二</Menu.Item>\r\n                        <Menu.Item disabled>选项三</Menu.Item>\r\n                        <Menu.SubMenu title=\"分组\">\r\n                            <Menu.Item>分组一</Menu.Item>\r\n                            <Menu.Item>分组二</Menu.Item>\r\n                            <Menu.Group title=\"分类\">\r\n                                <Menu.Item>分类一</Menu.Item>\r\n                                <Menu.Item>分类二</Menu.Item>\r\n                            </Menu.Group>\r\n                        </Menu.SubMenu>\r\n                    </Menu>\r\n                </Example>\r\n\r\n                <Example title=\"垂直导航\" codeDescription=\"垂直的顶部导航菜单。\" codeContent={str1} >\r\n                    <Menu mode=\"vertical\" style={{ width: \"200px\", backgroundColor: \"#f7f7f7\" }}>\r\n                        <Menu.Item>选项一</Menu.Item>\r\n                        <Menu.Item>选项二</Menu.Item>\r\n                        <Menu.Item disabled>选项三</Menu.Item>\r\n                        <Menu.SubMenu title=\"分组\">\r\n                            <Menu.Item>分组一</Menu.Item>\r\n                            <Menu.Item>分组二</Menu.Item>\r\n                        </Menu.SubMenu>\r\n                        <Menu.Group title=\"分类\">\r\n                            <Menu.Item>分类一</Menu.Item>\r\n                            <Menu.Item>分类二</Menu.Item>\r\n                        </Menu.Group>\r\n                    </Menu>\r\n                </Example>\r\n\r\n            </Common>\r\n\r\n            <Common title=\"API\" >\r\n\r\n                <Common title=\"Menu\" >\r\n                    <ApiProps childrenData={propsMenuData} />\r\n                </Common>\r\n\r\n                <Common title=\"Menu.Item\" >\r\n                    <ApiProps childrenData={propsMenuItemData} />\r\n                </Common>\r\n\r\n                <Common title=\"Menu.SubMenu\" >\r\n                    <ApiProps childrenData={propsMenuSubMenuData} />\r\n                </Common>\r\n\r\n                <Common title=\"Menu.Group\" >\r\n                    <ApiProps childrenData={propsMenuGroupData} />\r\n                </Common>\r\n            </Common>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default ViewMenu;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nexport interface ColProps extends React.HTMLAttributes<HTMLElement> {\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n    span?: number,\r\n    offset?: number,\r\n    xs?: number | object,\r\n    sm?: number | object,\r\n    md?: number | object,\r\n    lg?: number | object,\r\n    xl?: number | object,\r\n}\r\n\r\nconst Col: React.FC<ColProps> = (props) => {\r\n    const { className, span, offset, xs, sm, md, lg, xl, children, style, ...restProps } = props;\r\n    const classes = classnames(\"pa-col\", className, {\r\n        [`col-offset-${offset}`]: typeof offset === \"number\",\r\n        [`col-span-${span}`]: typeof span === \"number\",\r\n        [`col-xs-${xs}`]: xs,\r\n        [`col-sm-${sm}`]: sm,\r\n        [`col-md-${md}`]: md,\r\n        [`col-lg-${lg}`]: lg,\r\n        [`col-xl-${xl}`]: xl,\r\n    })\r\n    return (\r\n        <div className={classes} style={style} {...restProps}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nCol.displayName = \"Col\";\r\n\r\nexport default Col;\r\n\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport classnames from \"classnames\";\r\nimport Col, { ColProps } from \"./Col\";\r\n\r\nexport { Col }\r\n\r\ninterface RowProps extends React.HTMLAttributes<HTMLElement> {\r\n    className?: string,\r\n    gutter?: number,\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst Row: React.FC<RowProps> = (props) => {\r\n    const { className, gutter, children, ...restProps } = props;\r\n    const classes = classnames(\"pa-row\", className);\r\n\r\n    // 当有gutter时，设置Row的margin\r\n    const gutterRowStyle = gutter ? { marginLeft: -gutter / 2 + \"px\", marginRight: -gutter / 2 + \"px\" } : {};\r\n\r\n    const renderChildren = () => {\r\n        return React.Children.map(children, (child) => {\r\n            const childEl = child as React.FunctionComponentElement<ColProps>;\r\n            if (childEl.type.displayName === \"Col\") {\r\n                return React.cloneElement(childEl, { style: gutter ? { paddingLeft: gutter / 2 + \"px\", paddingRight: gutter / 2 + \"px\" } : {} });\r\n            } else {\r\n                return child;\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes} style={gutterRowStyle} {...restProps}>\r\n            {renderChildren()}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ItemMenuComponent = React.FC<RowProps> & {\r\n    Col: React.FC<ColProps>\r\n}\r\nconst TransRow = Row as ItemMenuComponent;\r\nTransRow.Col = Col;\r\n\r\nexport default TransRow;","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport Common, { Example, ApiProps } from \"../Common\";\r\nimport Row from \"../../components/Grid\";\r\n\r\n\r\nconst ViewGrid: React.FC<HTMLElement> = () => {\r\n    // Row的api参数数据\r\n    const apiRowData: string[][] = [\r\n        [\"gutter\", \"栅格间隔，单位：px\", \"number\", \"-\"],\r\n        [\"className\", \"自定义 Row 类名\", \"string\", \"-\"],\r\n        [\"style\", \"自定义 Row 样式\", \"React.CSSProperties\", \"-\"],\r\n    ];\r\n\r\n    // Col的api参数数据\r\n    const apiColData: string[][] = [\r\n        [\"span\", \"栅格占位格数，设置为 0 时相当于设置 display: none\", \"number\", \"-\"],\r\n        [\"offset\", \"栅格向右偏移的格数\", \"number\", \"-\"],\r\n        [\"xs\", \"响应式栅格，屏幕 < 576px 生效\", \"number\", \"-\"],\r\n        [\"sm\", \"响应式栅格，屏幕 ≥ 576px 生效\", \"number\", \"-\"],\r\n        [\"md\", \"响应式栅格，屏幕 ≥ 768px 生效\", \"number\", \"-\"],\r\n        [\"lg\", \"响应式栅格，屏幕 ≥ 992px 生效\", \"number\", \"-\"],\r\n        [\"xl\", \"响应式栅格，屏幕 ≥ 1200px 生效\", \"number\", \"-\"],\r\n        [\"className\", \"自定义 Row 类名\", \"string\", \"-\"],\r\n        [\"style\", \"自定义 Row 样式\", \"React.CSSProperties\", \"-\"],\r\n    ];\r\n\r\n    // 第一个例子代码\r\n    const str = ` ~~~js\r\n    import { Row } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <Row>\r\n        <Row.Col span={12}>Col-12</Row.Col>\r\n        <Row.Col span={12}>Col-12</Row.Col>\r\n    </Row>\r\n    <Row>\r\n        <Row.Col span={8}>Col-8</Row.Col>\r\n        <Row.Col span={8}>Col-8</Row.Col>\r\n        <Row.Col span={8}>Col-8</Row.Col>\r\n    </Row>\r\n    <Row>\r\n        <Row.Col span={6}>Col-6</Row.Col>\r\n        <Row.Col span={6}>Col-6</Row.Col>\r\n        <Row.Col span={6}>Col-6</Row.Col>\r\n        <Row.Col span={6}>Col-6</Row.Col>\r\n    </Row>`;\r\n\r\n    // 第二个例子代码\r\n    const str1 = ` ~~~js\r\n    import { Row } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    <Row>\r\n        <Row.Col span={4}>Col-4</Row.Col>\r\n        <Row.Col span={4} offset={4}>Col-4</Row.Col>\r\n        <Row.Col span={4} offset={4}>Col-4</Row.Col>\r\n        <Row.Col span={4}>Col-4</Row.Col>\r\n    </Row>`;\r\n\r\n    // 第三个例子代码\r\n    const str2 = ` ~~~js\r\n    import { Row } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n\r\n    const style1 = { background: '#1bd3ef', padding: '1rem 0' };\r\n    const style2 = { background: '#10c5e1', padding: '1rem 0' };\r\n\r\n    <Row gutter={20}>\r\n        <Row.Col span={8}>\r\n            <div style={style1}>Col-8</div>\r\n        </Row.Col>\r\n        <Row.Col span={8}>\r\n            <div style={style2}>Col-8</div>\r\n        </Row.Col>\r\n        <Row.Col span={8}>\r\n            <div style={style1}>Col-8</div>\r\n        </Row.Col>\r\n    </Row>`;\r\n\r\n    // 第四个例子代码\r\n    const str3 = ` ~~~js\r\n    import { Row } from \"panda-react-ui\";\r\n    import \"Panda-react-ui/dist/index.css\";\r\n    \r\n    <Row className=\"row\">\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n    </Row>`;\r\n\r\n\r\n    return (\r\n        <div className=\"view-grid\">\r\n            <Common title=\"Grid 栅格\" >\r\n                24 栅格系统。\r\n            </Common>\r\n\r\n            <Common title=\"何时使用\" >\r\n                快速实现响应式布局。\r\n            </Common>\r\n\r\n            <Common title=\"代码示例\">\r\n                {/* 第一个例子代码 */}\r\n                <Example title=\"基础栅格\" codeDescription=\"使用单一的一组 Row 和 Col 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 Row 内。\" codeContent={str} >\r\n                    <Row className=\"row\">\r\n                        <Row.Col span={12}>Col-12</Row.Col>\r\n                        <Row.Col span={12}>Col-12</Row.Col>\r\n                    </Row>\r\n                    <Row className=\"row\">\r\n                        <Row.Col span={8}>Col-8</Row.Col>\r\n                        <Row.Col span={8}>Col-8</Row.Col>\r\n                        <Row.Col span={8}>Col-8</Row.Col>\r\n                    </Row>\r\n                    <Row className=\"row\">\r\n                        <Row.Col span={6}>Col-6</Row.Col>\r\n                        <Row.Col span={6}>Col-6</Row.Col>\r\n                        <Row.Col span={6}>Col-6</Row.Col>\r\n                        <Row.Col span={6}>Col-6</Row.Col>\r\n                    </Row>\r\n                </Example>\r\n\r\n                {/* 第二个例子代码 */}\r\n                <Example title=\"区块偏移\" codeDescription=\"使用 offset 属性使区块向右侧偏移。\" codeContent={str1} >\r\n                    <Row className=\"row\">\r\n                        <Row.Col span={4}>Col-4</Row.Col>\r\n                        <Row.Col span={4} offset={4}>Col-4</Row.Col>\r\n                        <Row.Col span={4} offset={4}>Col-4</Row.Col>\r\n                        <Row.Col span={4}>Col-4</Row.Col>\r\n                    </Row>\r\n                </Example>\r\n\r\n                {/* 第三个例子代码 */}\r\n                <Example title=\"区块间隔\" codeDescription=\"使用 gutter 属性设置区块间隔。\" codeContent={str2} >\r\n                    <Row gutter={20} className=\"row-gutter\">\r\n                        <Row.Col span={8}>\r\n                            <div className=\"col-item\">Col-8</div>\r\n                        </Row.Col>\r\n                        <Row.Col span={8}>\r\n                            <div className=\"col-item\">Col-8</div>\r\n                        </Row.Col>\r\n                        <Row.Col span={8}>\r\n                            <div className=\"col-item\">Col-8</div>\r\n                        </Row.Col>\r\n                    </Row>\r\n                </Example>\r\n\r\n                {/* 第四个例子代码 */}\r\n                <Example title=\"响应式布局\" codeDescription=\"span 和 offset 默认所有宽度下生效，具体设置见 Options，设置 sm、md、lg、xl 属性覆盖以实现响应式布局。\" codeContent={str3} >\r\n                    <Row className=\"row\">\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                        <Row.Col xs={24} sm={12} md={8} lg={6} xl={3}>Col</Row.Col>\r\n                    </Row>\r\n                </Example>\r\n            </Common>\r\n\r\n            <Common title=\"API\">\r\n                <Common title=\"Row\">\r\n                    <ApiProps childrenData={apiRowData} />\r\n                </Common>\r\n\r\n                <Common title=\"Col\">\r\n                    <ApiProps childrenData={apiColData} />\r\n                </Common>\r\n            </Common>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewGrid;","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport './index.scss';\r\nimport Introduce from \"../Introduce\";\r\nimport UseStart from \"../UseStart\";\r\nimport ViewButton from \"../ViewButton\";\r\nimport ViewIcon from \"../ViewIcon\";\r\nimport ViewDivider from \"../ViewDivider\";\r\nimport ViewMenu from \"../ViewMenu\";\r\nimport ViewGrid from \"../ViewGrid\";\r\n\r\n\r\nconst IndexContent: React.FC = () => {\r\n    return (\r\n        <div className=\"index-content\">\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Introduce} />\r\n                <Route path=\"/use\" component={UseStart} />\r\n                <Route path=\"/button\" component={ViewButton} />\r\n                <Route path=\"/icon\" component={ViewIcon} />\r\n                <Route path=\"/divider\" component={ViewDivider} />\r\n                <Route path=\"/menu\" component={ViewMenu} />\r\n                <Route path=\"/grid\" component={ViewGrid} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default IndexContent;","import React, { useRef, useEffect } from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.scss';\nimport Menu from \"../../components/Menu\";\nimport IndexContent from \"../IndexContent\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fas);\n\nconst logo = require(\"../../assets/images/logo.png\");\nconst githubSvg = require(\"../../assets/images/github-brands.svg\");\n\n// 菜单导航列表的参数\ninterface menuListProps {\n  title: string,\n  path?: string,\n  children?: Array<menuListProps>\n}\n// 菜单导航的列表\nconst menuList: Array<menuListProps> = [\n  {\n    title: \"Panda-react-ui\",\n    path: \"/\"\n  },\n  {\n    title: \"开始使用\",\n    path: \"/use\"\n  },\n  {\n    title: \"通用\",\n    children: [\n      {\n        title: \"Icon 图标\",\n        path: \"/icon\"\n      },\n      {\n        title: \"Button 按钮\",\n        path: \"/button\"\n      },\n    ]\n  },\n  {\n    title: \"布局\",\n    children: [\n      {\n        title: \"Divider 分割线\",\n        path: \"/divider\"\n      },\n      {\n        title: \"Grid 栅格\",\n        path: \"/grid\"\n      },\n    ]\n  },\n  {\n    title: \"导航\",\n    children: [\n      {\n        title: \"Menu 菜单\",\n        path: \"/menu\"\n      }\n    ]\n  }\n]\n\n// 遍历找到初始的路由对应导航的坐标\nconst initIndex = (): string => {\n  let resultIndex: string = \"0\";\n  menuList.forEach((item, itemIndex) => {\n    if (item.path === window.location.hash.slice(1)) {\n      return resultIndex = itemIndex.toString();\n    }\n    if (item.children) {\n      item.children.forEach((child, childIndex) => {\n        if (child.path === window.location.hash.slice(1)) {\n          return resultIndex = `${itemIndex.toString()}-${(childIndex + 1).toString()}`;\n        }\n      })\n    }\n  })\n  return resultIndex;\n}\n\nfunction App() {\n  const aside = useRef<HTMLElement>(null);\n  useEffect(() => {\n    changeAsideH();\n  }, [])\n\n  // 根据窗口的大小来改变左侧导航栏的高度\n  const changeAsideH = () => {\n    let timer: number;\n    window.addEventListener(\"resize\", () => {\n      window.clearTimeout(timer);\n      timer = window.setTimeout(() => {\n        let asideRef = aside.current as HTMLElement;\n        asideRef.style.height = \"calc(100vh - 60px)\";\n      }, 500)\n    })\n  }\n\n  return (\n    <Router>\n      <Route path=\"/\">\n        <div className=\"App\">\n          <header className=\"header\">\n            <div className=\"header-left\">\n              <img src={logo} alt=\"logo\" className=\"logo\" />\n              <span className=\"title\">Panda-react-ui</span>\n            </div>\n            <div className=\"header-right\">\n              <a href=\"https://github.com/dearDreamWeb/panda-ui.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={githubSvg} alt=\"githubSvg\" className=\"githubSvg\" />\n              </a>\n            </div>\n          </header>\n          <main className=\"container\">\n            {/* 左侧导航栏 */}\n            <aside className=\"aside\" ref={aside}>\n              <Menu mode=\"vertical\" defaultIndex={initIndex()}>\n                {\n                  menuList.map((item, index) => {\n                    if (item.children) {\n                      return (\n                        <Menu.Group key={index} title={item.title}>\n                          {item.children.map((subItem, subIndex) => {\n                            return (\n                              <Menu.Item key={subIndex}>\n                                <Link to={subItem.path ? subItem.path : \"/\"}>\n                                  {subItem.title}\n                                </Link>\n                              </Menu.Item>\n                            )\n                          })}\n                        </Menu.Group>\n                      )\n                    } else {\n                      return (\n                        <Menu.Item key={index}>\n                          <Link to={item.path ? item.path : \"/\"}>\n                            {item.title}\n                          </Link>\n                        </Menu.Item>\n                      )\n                    }\n                  })\n                }\n              </Menu>\n            </aside>\n            {/* 右侧内容区 */}\n            <section className=\"main\">\n              <IndexContent />\n            </section>\n          </main>\n        </div>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/index.scss\";\r\nimport App from './views/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}